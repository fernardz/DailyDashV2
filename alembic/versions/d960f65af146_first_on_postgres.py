"""First on Postgres

Revision ID: d960f65af146
Revises: 
Create Date: 2021-07-24 20:58:53.399598

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = 'd960f65af146'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('strava_activity',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('type', sa.String(length=50), nullable=False),
    sa.Column('start_date', sa.DateTime(), nullable=False),
    sa.Column('distance', sa.Float(), nullable=False),
    sa.Column('moving_time', sa.BigInteger(), nullable=False),
    sa.Column('average_speed', sa.Float(), nullable=True),
    sa.Column('max_speed', sa.Float(), nullable=True),
    sa.Column('average_cadence', sa.Float(), nullable=True),
    sa.Column('average_heartrate', sa.Float(), nullable=True),
    sa.Column('weighted_average_watts', sa.Float(), nullable=True),
    sa.Column('kilojoules', sa.Float(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_strava_activity_id'), 'strava_activity', ['id'], unique=False)
    op.create_table('tasks',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('desc', sa.String(), nullable=True),
    sa.Column('start_date', sa.Date(), nullable=False),
    sa.Column('enabled', sa.Boolean(), nullable=False),
    sa.Column('persist', sa.Boolean(), nullable=False),
    sa.Column('freq', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_tasks_desc'), 'tasks', ['desc'], unique=False)
    op.create_index(op.f('ix_tasks_id'), 'tasks', ['id'], unique=False)
    op.create_table('vitamins',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_vitamins_id'), 'vitamins', ['id'], unique=False)
    op.create_index(op.f('ix_vitamins_name'), 'vitamins', ['name'], unique=True)
    op.create_table('water',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('date', sa.Date(), nullable=True),
    sa.Column('size', sa.Integer(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_water_id'), 'water', ['id'], unique=False)
    op.create_table('water_goals',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('date', sa.Date(), nullable=True),
    sa.Column('size', sa.Integer(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_water_goals_id'), 'water_goals', ['id'], unique=False)
    op.create_table('task_records',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('date', sa.Date(), nullable=True),
    sa.Column('status', sa.Boolean(), nullable=False),
    sa.Column('task_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['task_id'], ['tasks.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('date', 'task_id', name='_only_one_a_day')
    )
    op.create_index(op.f('ix_task_records_date'), 'task_records', ['date'], unique=False)
    op.create_index(op.f('ix_task_records_id'), 'task_records', ['id'], unique=False)
    op.create_table('vitamin_goals',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('date', sa.Date(), nullable=False),
    sa.Column('qty', sa.Integer(), nullable=False),
    sa.Column('vitamin_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['vitamin_id'], ['vitamins.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_vitamin_goals_id'), 'vitamin_goals', ['id'], unique=False)
    op.create_table('vitamin_records',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('date', sa.Date(), nullable=False),
    sa.Column('qty', sa.Integer(), nullable=False),
    sa.Column('vitamin_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['vitamin_id'], ['vitamins.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_vitamin_records_id'), 'vitamin_records', ['id'], unique=False)
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('distributors',
    sa.Column('did', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('name', sa.VARCHAR(length=40), autoincrement=False, nullable=True),
    sa.UniqueConstraint('name', name='distributors_name_key')
    )
    op.drop_index(op.f('ix_vitamin_records_id'), table_name='vitamin_records')
    op.drop_table('vitamin_records')
    op.drop_index(op.f('ix_vitamin_goals_id'), table_name='vitamin_goals')
    op.drop_table('vitamin_goals')
    op.drop_index(op.f('ix_task_records_id'), table_name='task_records')
    op.drop_index(op.f('ix_task_records_date'), table_name='task_records')
    op.drop_table('task_records')
    op.drop_index(op.f('ix_water_goals_id'), table_name='water_goals')
    op.drop_table('water_goals')
    op.drop_index(op.f('ix_water_id'), table_name='water')
    op.drop_table('water')
    op.drop_index(op.f('ix_vitamins_name'), table_name='vitamins')
    op.drop_index(op.f('ix_vitamins_id'), table_name='vitamins')
    op.drop_table('vitamins')
    op.drop_index(op.f('ix_tasks_id'), table_name='tasks')
    op.drop_index(op.f('ix_tasks_desc'), table_name='tasks')
    op.drop_table('tasks')
    op.drop_index(op.f('ix_strava_activity_id'), table_name='strava_activity')
    op.drop_table('strava_activity')
    # ### end Alembic commands ###
